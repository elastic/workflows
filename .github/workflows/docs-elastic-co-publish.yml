name: builder

on:
  workflow_call:
    inputs:
      prebuild: 
        type: string
        required: true
      project-name: 
        type: string
        required: true
      repo: 
        type: string
        required: true
    secrets:
      VERCEL_GITHUB_TOKEN:
        description: 'A GitHub PAT with repo scope'
        required: true
      VERCEL_TOKEN:
        description: 'Vercel API token, account level'
        required: true
      VERCEL_ORG_ID:
        description: 'Vercel ORG token, org level'
        required: true
      VERCEL_PROJECT_ID_DOCS_CO:
        description: 'Vercel PROJECT token, project level'
        required: true

jobs:
  preview:
    name: doc builder
    runs-on: ubuntu-latest
    steps:

      - name: Setup workspace
        uses: actions/checkout@v3.0.1

      - name: Checkout current branch into temp
        if: github.event.pull_request.merged == false
        uses: actions/checkout@v3.0.1
        with:
          path: 'tmp'
          fetch-depth: 2
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
          
      - name: Checkout current branch into temp
        if: github.event.pull_request.merged == true
        uses: actions/checkout@v2
        with:
          path: 'tmp'

      - name: Checkout essential repos
        uses: actions/checkout@v3.0.1
        with:
          repository: elastic/${{ inputs.repo }}
          token: ${{ secrets.VERCEL_GITHUB_TOKEN }}
          path: ${{ github.workspace }}/${{ inputs.repo }}

      - name: Checkout Wordlake
        uses: actions/checkout@v3.0.1
        with:
          repository: elastic/${{ inputs.prebuild }}
          token: ${{ secrets.VERCEL_GITHUB_TOKEN }}
          path: ${{ github.workspace }}/${{ inputs.prebuild }}

      - name: Show current workspace
        shell: bash
        run: ls -lat 

      - name: Show child workspace
        shell: bash
        run: ls -lat ${{ github.workspace }}

      - name: Show parent workspace
        shell: bash
        run: ls -lat ..

      - name: Portal
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/${{ inputs.prebuild }}/${{ github.event.repository.name }}
          rm -rf ${{ github.workspace }}/${{ inputs.prebuild }}/${{ github.event.repository.name }}/*
          rsync --ignore-missing-args -zavpm \
          --exclude='cats.mdx' \
          --include='*.docnav.json' \
          --include='*.apidocs.json' \
          --include='*.mdx' \
          --include='*.png' \
          --include='*.gif' \
          --include='*.jpg' \
          --include='*.jpeg' \
          --include='*.devdocs.json' \
          --include='*/' \
          --exclude='*' \
          ${{ github.workspace }}/tmp/ \
          ${{ github.workspace }}/${{ inputs.prebuild }}/${{ github.event.repository.name }}/

      - name: Generate preview
        if: github.event.pull_request.merged == false
        id: vercel-deploy
        uses: elastic/builder@v21.4.0
        continue-on-error: true
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}  #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DOCS_CO }} #Required
          vercel-project-name: ${{ inputs.project-name }}
          working-directory: ./
          github-token: ${{ secrets.VERCEL_GITHUB_TOKEN }} #Optional 
          github-comment: true # Otherwise need github-token (VERCEL_GITHUB_TOKEN)
          
      - name: Vercel CLI
        if: always() && steps.vercel-deploy.outcome != 'success'
        shell: bash
        run: | 
            npm install vercel@24.1.0

      - name: Gimme dat URL
        if: always() && steps.vercel-deploy.outcome != 'success'
        shell: bash
        run: | 
            echo ${{ steps.vercel-deploy.outputs.preview }}
            echo ${{ steps.vercel-deploy.outputs }}
            echo steps.vercel-deploy.outputs.preview-url

      - name: Output logs
        if: always() && steps.vercel-deploy.outcome != 'success'
        uses: mathiasvr/command-output@v1
        id: get-log
        with:
          run: |
            vercel logs docs-elastic-eqcwhnyaz-elastic-dev.vercel.app --output raw --token ${{ secrets.VERCEL_TOKEN }}

      - name: Gimme dat URL
        if: always() && steps.vercel-deploy.outcome != 'success'
        shell: bash
        run: | 
         echo "${{ steps.get-log.outputs.stdout }}"

      - name: Find Comment
        if: always() && steps.vercel-deploy.outcome != 'success'
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'elasticdocs'
          body-includes: 'Visit #next-docs in Slack'

      - name: Update comment
        if: always() && steps.fc.outputs.comment-id != '' && steps.vercel-deploy.outcome != 'success'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            ---
            <details>
              <summary>Expand for recent log > </summary>
              ${{ steps.get-log.outputs.stdout }}
            </details>

      - name: Create comment
        if: always() && steps.fc.outputs.comment-id == '' && steps.vercel-deploy.outcome != 'success'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ---
              <details>
                <summary>Expand for recent log</summary>
                ${{ steps.vercel-log.outputs.get-log }}
              </details>

      - name: Portal for deploy
        if: github.event.pull_request.merged == true
        shell: bash
        run: |
          cd ${{ github.workspace }}/${{ inputs.prebuild }}
          git config user.name count-docula
          git config user.email github-actions@github.com
          git pull
          git add .
          git commit -m "New content from https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          git push

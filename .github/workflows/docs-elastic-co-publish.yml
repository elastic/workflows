name: builder

on:
  workflow_call:
    inputs:
      prebuild: 
        type: string
      project-name: 
        type: string
      repo: 
        type: string
      subdirectory:
        type: string
        default: '.'
    secrets:
      VERCEL_GITHUB_TOKEN:
        description: 'A GitHub PAT with repo scope'
        required: true
      VERCEL_TOKEN:
        description: 'Vercel API token, account level'
        required: true
      VERCEL_ORG_ID:
        description: 'Vercel ORG token, org level'
        required: true
      VERCEL_PROJECT_ID_DOCS_CO:
        description: 'Vercel PROJECT token, project level'
        required: true

jobs:
  preview:
    name: doc builder
    runs-on: ubuntu-latest
    steps:

      - name: Setup workspace
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Checkout branch into tmp
        if: github.event.action != 'closed' && github.event.pull_request.merged != true
        uses: actions/checkout@v4
        with:
          path: 'tmp'
          fetch-depth: 2
          ref: refs/pull/${{ github.event.number }}/head
          persist-credentials: false

      - name: Prepare content for deploy
        if: ${{ github.event.pull_request.merged }}
        uses: actions/checkout@v4
        with:
          path: 'tmp'
          persist-credentials: false

      - name: Checkout essential repos
        uses: actions/checkout@v4
        with:
          repository: elastic/docs.elastic.co
          token: ${{ secrets.VERCEL_GITHUB_TOKEN }}
          path: ${{ github.workspace }}/docs.elastic.co
          persist-credentials: false

      - name: Checkout Wordlake
        uses: actions/checkout@v4
        with:
          repository: elastic/wordlake
          token: ${{ secrets.VERCEL_GITHUB_TOKEN }}
          path: ${{ github.workspace }}/wordlake

      - name: Show current workspace
        shell: bash
        run: ls -lat 
       
      - name: Temp sources override
        shell: bash
        run: cp -f ${{ github.workspace }}/wordlake/.scaffold/content.js ${{ github.workspace }}/docs.elastic.co/config/. 

      - name: Portal
        if: github.event.action != 'closed' || github.event.pull_request.merged == true
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/wordlake/${{ github.event.repository.name }}
          rm -rf ${{ github.workspace }}/wordlake/${{ github.event.repository.name }}/*
          rsync --ignore-missing-args -zavpm --no-l \
          --include='${{ inputs.subdirectory }}/*.docnav.json' \
          --include='${{ inputs.subdirectory }}/*.apidocs.json' \
          --include='${{ inputs.subdirectory }}/*.mdx' \
          --include='${{ inputs.subdirectory }}/*.png' \
          --include='${{ inputs.subdirectory }}/*.gif' \
          --include='${{ inputs.subdirectory }}/*.jpg' \
          --include='${{ inputs.subdirectory }}/*.svg' \
          --include='${{ inputs.subdirectory }}/*.jpeg' \
          --include='${{ inputs.subdirectory }}/*.webp' \
          --include='${{ inputs.subdirectory }}/*.devdocs.json' \
          --include='${{ inputs.subdirectory }}/*/' \
          --exclude='*' \
          ${{ github.workspace }}/tmp/ \
          ${{ github.workspace }}/wordlake/${{ github.event.repository.name }}/

      - name: Generate preview
        if: github.event.pull_request.merged != true && github.event.pull_request.closed != true
        id: vercel-deploy
        uses: elastic/builder@v25.2.0
        continue-on-error: false
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}  #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DOCS_CO }} #Required
          vercel-project-name: co-preview-docs
          working-directory: ./
          github-token: ${{ secrets.VERCEL_GITHUB_TOKEN }} #Optional 
          github-comment: true # Otherwise need github-token (VERCEL_GITHUB_TOKEN)

      - name: Portal for deploy
        if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == github.event.pull_request.base.repo.default_branch
        shell: bash
        run: |
          cd ${{ github.workspace }}/wordlake
          git config user.name elasticdocs
          git config user.email docs-eng+elasticdocs@elastic.co
          git pull
          git add .
          git commit -m "New content from https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          git push https://${{ secrets.VERCEL_GITHUB_TOKEN }}@github.com/elastic/wordlake
